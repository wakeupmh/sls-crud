org: devopmh
app: grocery-store
service: grocery-store

package:
  individually: true
build:
  esbuild:
    minify: true

plugins:
  - serverless-plugin-log-retention
  - serverless-iam-roles-per-function

stages:
  dev:
    params:
      tableName: 'grocery-store-${sls:stage}'
  prod:
    params:
      tableName: 'grocery-store-${sls:stage}'

provider:
  name: aws
  runtime: nodejs20.x
  logRetentionInDays: 7
  versionFunctions: false
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:GetItem'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
            - 'dynamodb:Query'
            - 'dynamodb:DescribeTable'
          Resource:
            - 'arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${sls:stageParams.tableName}'
            - 'arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${sls:stageParams.tableName}/index/*'

resources:
  Resources:
   DynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: '${sls:stageParams.tableName}'
      BillingMode: PAY_PER_REQUEST

    AttributeDefinitions:
      - AttributeName: 'pk'
        AttributeType: 'S'
      - AttributeName: 'sk'
        AttributeType: 'S'
      - AttributeName: 'pkBrandPrice'
        AttributeType: 'S'
      - AttributeName: 'skBrandPrice'
        AttributeType: 'S'
      - AttributeName: 'pkCategoryBrandPrice'
        AttributeType: 'S'
      - AttributeName: 'skCategoryBrandPrice'
        AttributeType: 'S'
      - AttributeName: 'pkProduct'
        AttributeType: 'S'
      - AttributeName: 'skProduct'
        AttributeType: 'S'
      - AttributeName: 'stock'
        AttributeType: 'N'
      - AttributeName: 'price'
        AttributeType: 'N'

    KeySchema:
      - AttributeName: 'pk'
        KeyType: 'HASH'
      - AttributeName: 'sk'
        KeyType: 'RANGE'

    GlobalSecondaryIndexes:
      - IndexName: 'brandPriceIndex'
        KeySchema:
          - AttributeName: 'pkBrandPrice'
            KeyType: 'HASH'
          - AttributeName: 'skBrandPrice'
            KeyType: 'RANGE'
        Projection:
          ProjectionType: 'INCLUDE'
          NonKeyAttributes:
            - 'price'
      - IndexName: 'categoryBrandPriceIndex'
        KeySchema:
          - AttributeName: 'pkCategoryBrandPrice'
            KeyType: 'HASH'
          - AttributeName: 'skCategoryBrandPrice'
            KeyType: 'RANGE'
        Projection:
          ProjectionType: 'ALL'
      - IndexName: 'productIndex'
        KeySchema:
          - AttributeName: 'pkProduct'
            KeyType: 'HASH'
          - AttributeName: 'skProduct'
            KeyType: 'RANGE'
        Projection:
          ProjectionType: 'INCLUDE'
          NonKeyAttributes:
            - 'stock'
      - IndexName: 'categoryPriceIndex'
        KeySchema:
          - AttributeName: 'pkCategoryPrice'
            KeyType: 'HASH'
          - AttributeName: 'price'
            KeyType: 'RANGE'
        Projection:
          ProjectionType: 'ALL'
functions:
  create:
    handler: handler.create
    events:
      - httpApi:
          path: /create
          method: post
    environment:
      TABLE_NAME: ${sls:stageParams.tableName}
  get:
    handler: handler.get
    events:
      - httpApi:
          path: /get
          method: get
    environment:
      TABLE_NAME: ${sls:stageParams.tableName}
  getOne:
    handler: handler.getOne
    events:
      - httpApi:
          path: /get/{id}
          method: get
    environment:
      TABLE_NAME: ${sls:stageParams.tableName}
  update:
    handler: handler.update
    events:
      - httpApi:
          path: /update
          method: put
    environment:
      TABLE_NAME: ${sls:stageParams.tableName}
  delete:
    handler: handler.delete
    events:
      - httpApi:
          path: /delete
          method: delete
    environment:
      TABLE_NAME: ${sls:stageParams.tableName}

