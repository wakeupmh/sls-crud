name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - dev

jobs:
  set-env-name:
    name: set env name
    runs-on: ubuntu-latest
    outputs:
      current_env: ${{ steps.set_env.outputs.current_env }}
    steps:
      - name: Set env name
        id: current_env
        run: |
          echo "ENVIRONMENT_NAME=${{ github.ref == 'refs/heads/main' && 'production' || 'dev' }}" >> $GITHUB_ENV
      - name: Set output
        id: set_env
        run: echo "name=current_env={{ env.ENVIRONMENT_NAME }} >> $GITHUB_OUTPUT"

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: set-env-name
    environment:
      name: ${{ needs.set-env-name.outputs.current_env }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: install dependencies
        run: npm ci

      - name: configure aws credentials for ${{ env.ENVIRONMENT_NAME }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: deploy with serverless to ${{ env.ENVIRONMENT_NAME }}
        if: success() && ${{ needs.set-environment.outputs.current_env }}
        run: npx serverless deploy --stage ${{ needs.set-environment.outputs.current_env }}
        env:
          NODE_ENV: ${{ needs.set-environment.outputs.current_env }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
